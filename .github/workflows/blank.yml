# 1.首先，在workflow文件中定义触发器，例如每次推送到主分支时触发同步操作。
# 工作流名称
name: Sync-Images-to-AliDocker
# 工作流运行时显示名称
run-name: ${{ github.actor }} is Sync Images to AliDocker.
# 怎样触发工作流
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 2.添加一个job来执行同步操作。在workflow文件中，添加一个job 并指定使用的操作系统环境。
# 工作流程任务（通常含有一个或多个步骤）
jobs:
  syncimages:
    runs-on: ubuntu-latest
    # 在job中添加步骤来执行同步操作。在上述job中，添加步骤来执行skopeo命令，从registry.k8s.io仓库拉取镜像，并将其推送到docker.io仓库。
    steps:
    - name: Checkout Repos
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.9.1
    # 设置项目Secrets以提供Docker Hub登录所需的用户名和密码。
    - name: Login to alidocker
      uses: docker/login-action@v2.2.0
      with:
        registry: ${{ secrets.DOCKER_LOGIN_URL }}
        username: ${{ secrets.DOCKER_LOGIN_USER }}
        password: ${{ secrets.DOCKER_LOGIN_PASS }}
        logout: false
    # - name: 登录dockerhub
    #   run: docker login --username=yshyq --password=7648@qq.com hub.docker.com

    # 使用shell命令批量同步所需的镜像到dockerHub中
    - name: 同步镜像
      run: |
        #!/usr/bin/env bash
        #skopeo copy --all docker://registry.k8s.io/kube-apiserver:v1.27.4 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/kube-apiserver:v1.27.4
        #skopeo copy --all docker://node:18-alpine3.20 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/node:18-alpine3.20
        #skopeo copy --all docker://gcr.io/k8s-staging-sig-storage/nfs-subdir-external-provisioner:v4.0.1 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/nfs-subdir-external-provisioner:v4.0.2
        # skopeo copy --all docker://minio/minio:RELEASE.2023-10-16 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/minio:RELEASE.2023-10-16
        # skopeo copy --all docker://docker.io/anjia0532/google-containers.ingress-nginx.kube-webhook-certgen:v1.1.1 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/google-containers.ingress-nginx.kube-webhook-certgen:v1.1.1
        # skopeo copy --all docker://docker.io/grafana/promtail:2.8.3 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/grafana-promtail:2.8.3

        # skopeo copy --all docker://grafana/grafana:9.3.16 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/grafana:9.3.16
        # # skopeo copy --all docker://docker.io/grafana/promtail:2.8.3 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/grafana-promtail:2.8.3
        # skopeo copy --all docker://grafana/loki:2.6.1 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/grafana-loki:2.6.1


        # skopeo copy --all docker://docker.io/flannel/flannel:v0.25.5 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/flannel:v0.25.5
        # skopeo copy --all docker://docker.io/flannel/flannel-cni-plugin:v1.5.1-flannel1 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/flannel-cni-plugin:v1.5.1-flannel1
        # docker pull docker.io/flannel/flannel-cni-plugin:v1.5.1-flannel1
        # docker tag  docker.io/flannel/flannel-cni-plugin:v1.5.1-flannel1 registry.cn-hangzhou.aliyuncs.com/mytest_docker123/flannel-cni-plugin:v1.5.1-flannel1
        # docker push registry.cn-hangzhou.aliyuncs.com/mytest_docker123/flannel-cni-plugin:v1.5.1-flannel1


        # skopeo copy --all docker://mysql:5.7 docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/mysql:5.7

        # docker pull mysql:5.7
        # docker tag  mysql:5.7 registry.cn-hangzhou.aliyuncs.com/mytest_docker123/mysql:5.7
        # docker push registry.cn-hangzhou.aliyuncs.com/mytest_docker123/mysql:5.7


        # docker pull milvusdb/milvus:v2.5.6
        # docker tag milvusdb/milvus:v2.5.6  registry.cn-hangzhou.aliyuncs.com/mytest_docker123/milvus:v2.5.6
        # docker push registry.cn-hangzhou.aliyuncs.com/mytest_docker123/milvus:v2.5.6


        docker pull apachepulsar/pulsar:3.0.7
        docker tag apachepulsar/pulsar:3.0.7  registry.cn-hangzhou.aliyuncs.com/mytest_docker123/pulsar:3.0.7
        docker push registry.cn-hangzhou.aliyuncs.com/mytest_docker123/pulsar:3.0.7
        
      
   
   


        # docker pull elasticsearch:8.11.3
        # docker tag elasticsearch:8.11.3  registry.cn-hangzhou.aliyuncs.com/mytest_docker123/elasticsearch:8.11.3
        # docker push registry.cn-hangzhou.aliyuncs.com/mytest_docker123/elasticsearch:8.11.3

        # skopeo copy --all docker://chen:v4.1.0-ce docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/chen:v4.1.0-ce

        # skopeo copy --all docker://core:v4.1.0-ce docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/core:v4.1.0-ce

        # skopeo copy --all docker://koko:v4.1.0-ce docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/koko:v4.1.0-ce

        # skopeo copy --all docker://lion:v4.1.0-ce docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/lion:v4.1.0-ce

        # skopeo copy --all docker://postgres:16.3-bullseye docker://registry.cn-hangzhou.aliyuncs.com/mytest_docker123/postgres:16.3-bullseye

